// https://dev.twitter.com/docs/api/1.1/get/account/settings
TwitterAccount, "account/settings":GET, GetAccountSettings

// https://dev.twitter.com/docs/api/1.1/get/account/verify_credentials
TwitterUser, "account/verify_credentials", GetUserProfile, bool? include_entities, bool? skip_status, bool? include_email
TwitterUser, "account/verify_credentials", VerifyCredentials, bool? include_entities, bool? skip_status, bool? include_email

// https://dev.twitter.com/docs/api/1.1/post/account/settings
TwitterAccount, "account/settings":POST, UpdateAccountSettings, int? trend_location_woeid, bool? sleep_time_enabled, int? start_sleep_time, int? end_sleep_time, string time_zone, string lang

// https://dev.twitter.com/docs/api/1.1/post/account/update_delivery_device
TwitterUser, "account/update_delivery_device", UpdateDeliveryDevice, TwitterDeliveryDevice device, bool? include_entities

// https://dev.twitter.com/docs/api/1.1/post/account/update_profile
TwitterUser, "account/update_profile":POST, UpdateProfile, string name, string url, string location, string description, bool? include_entities, bool? skip_status

// https://dev.twitter.com/docs/api/1.1/post/account/update_profile_background_image
TwitterUser, "account/update_profile_background_image":POST, UpdateProfileBackgroundImage, string imagePath, bool? tile, bool? include_entities, bool? skip_status, bool? use

// https://dev.twitter.com/docs/api/1.1/post/account/update_profile_colors
TwitterUser, "account/update_profile_colors":POST, UpdateProfileColors, string profile_background_color, string profile_link_color, string profile_sidebar_border_color, string profile_sidebar_fill_color, string profile_text_color, bool? include_entities, bool? skip_status

// https://dev.twitter.com/docs/api/1.1/post/account/update_profile_image
TwitterUser, "account/update_profile_image":POST, UpdateProfileImage, string image_path, bool? include_entities, bool? skip_status

// https://dev.twitter.com/docs/api/1.1/get/blocks/list
TwitterCursorList<TwitterUser>, "blocks/list", ListBlockedUsers, bool? include_entities, bool? skip_status, long? cursor

// https://dev.twitter.com/docs/api/1.1/get/blocks/ids
TwitterCursorList<long>, "blocks/ids", ListBlockedUserIds, long? cursor

// https://dev.twitter.com/docs/api/1.1/post/blocks/create
TwitterUser, "blocks/create":POST, BlockUser, long? user_id, string screen_name, bool? include_entities, bool? skip_status

// https://dev.twitter.com/docs/api/1.1/post/blocks/destroy
TwitterUser, "blocks/destroy":POST, UnblockUser, string screen_name, long? user_id, bool? include_entities, bool? skip_status


// https://dev.twitter.com/docs/api/1.1/post/mutes/users/create
TwitterUser, "mutes/users/create":POST, MuteUser, long? user_id, string screen_name 

// https://dev.twitter.com/docs/api/1.1/post/mutes/users/destroy
TwitterUser, "mutes/users/destroy":POST, UnmuteUser, long? user_id, string screen_name 

// https://dev.twitter.com/docs/api/1.1/get/mutes/users/ids
TwitterCursorList<long>, "mutes/users/ids", ListMutedUserIds, long? cursor

// https://dev.twitter.com/docs/api/1.1/get/mutes/users/list
TwitterCursorList<long>, "mutes/users/list", ListMutedUsers, long? cursor


// https://dev.twitter.com/docs/api/1.1/get/users/lookup
IEnumerable<TwitterUser>, "users/lookup", ListUserProfilesFor, IEnumerable<string> screen_name, IEnumerable<long> user_id, bool? include_entities

// https://dev.twitter.com/docs/api/1.1/get/users/show
TwitterUser, "users/show", GetUserProfileFor, long? user_id, string screen_name, bool? include_entities

// https://dev.twitter.com/docs/api/1.1/get/users/search
IEnumerable<TwitterUser>, "users/search", SearchForUser, string q, int? page, int? count, bool? include_entities

// https://dev.twitter.com/docs/api/1.1/get/users/contributees
// TODO

// https://dev.twitter.com/docs/api/1.1/get/users/contributors
// TODO

// https://dev.twitter.com/docs/api/1.1/post/account/remove_profile_banner
// TODO

// https://dev.twitter.com/docs/api/1.1/post/account/update_profile_banner
// TODO

// https://dev.twitter.com/docs/api/1.1/get/users/profile_banner
ProfileBanners, "users/profile_banner", GetProfileBannerFor, string screen_name, long? user_id